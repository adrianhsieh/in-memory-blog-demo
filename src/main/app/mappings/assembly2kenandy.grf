<?xml version="1.0" encoding="UTF-8"?><Graph author="Mike" created="Mon Jul 23 11:50:44 PDT 2012" guiVersion="3.3.0.M2" id="1343082792240" licenseCode="Unlicensed" licenseType="Unknown" modified="Mon Jul 23 11:50:44 PDT 2012" modifiedBy="Mike" name="Assembly2Kenandy" revision="1.0" showComponentDetails="false">
<Global>
<Metadata __sourcePath="{}/InputData" _dataStructure="SINGLE_DIMENSIONAL_COLLECTION" _id="__id" _type="Input" id="e2c42167-5cec-41fb-a4bd-2334892483cd">
<Record fieldDelimiter="|" label="InputData" name="InputData" recordDelimiter="&#10;" type="delimited">
<Field __artificialType="_id" __systemManaged="true" name="__id" type="string"/>
<Field __sourcePath="{}/InputData/ITEMIDENTIFIER" label="ITEMIDENTIFIER" name="ITEMIDENTIFIER" type="string"/>
<Field __sourcePath="{}/InputData/VERSIONNOTES" label="VERSIONNOTES" name="VERSIONNOTES" type="string"/>
<Field __sourcePath="{}/InputData/CHANGENUMBER" label="CHANGENUMBER" name="CHANGENUMBER" type="string"/>
<Field __sourcePath="{}/InputData/REVISIONRELEASEDATE" label="REVISIONRELEASEDATE" name="REVISIONRELEASEDATE" type="string"/>
</Record>
</Metadata>
<Metadata __sourcePath="{}/OutputData" _dataStructure="SINGLE_DIMENSIONAL_COLLECTION" _id="__id" _type="Output" id="dbb87d33-fe37-4cd8-b652-dc9e5a91235e">
<Record fieldDelimiter="|" label="OutputData" name="OutputData" recordDelimiter="&#10;" type="delimited">
<Field __artificialType="_id" __systemManaged="true" name="__id" type="string"/>
<Field __sourcePath="{}/OutputData/KSE__Assembly__c" label="KSE__Assembly__c" name="KSE__Assembly__c" type="string"/>
<Field __sourcePath="{}/OutputData/KSE__ECO__c" label="KSE__ECO__c" name="KSE__ECO__c" type="string"/>
<Field __sourcePath="{}/OutputData/KSE__DateECO__c" label="KSE__DateECO__c" name="KSE__DateECO__c" type="string"/>
<Field __sourcePath="{=}/OutputData/KSE__Notes__c" name="KSE__Notes__c" type="string"/>
</Record>
</Metadata>
<Dictionary>
<Entry id="DictionaryEntry0" input="true" name="inputPayload" output="false" type="object"/>
<Entry id="DictionaryEntry1" input="false" name="outputPayload" output="true" type="object"/>
</Dictionary>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="dict:inputPayload" guiHeight="0" guiName="MAP Reader" guiWidth="0" guiX="20" guiY="20" id="BEAN_READER0" type="BEAN_READER">
<attr name="mapping"><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Context outPort="0" sequenceField="__id" xpath=".">
  <Mapping cloverField="ITEMIDENTIFIER" trim="true" xpath="ITEMIDENTIFIER"/>
  <Mapping cloverField="VERSIONNOTES" trim="true" xpath="VERSIONNOTES"/>
  <Mapping cloverField="CHANGENUMBER" trim="true" xpath="CHANGENUMBER"/>
  <Mapping cloverField="REVISIONRELEASEDATE" trim="true" xpath="REVISIONRELEASEDATE"/>
</Context>
]]></attr>
<attr name="_data_format"><![CDATA[MAP]]></attr>
</Node>
<Node enabled="enabled" fileURL="dict:outputPayload" guiHeight="0" guiName="MAP Writer" guiWidth="0" guiX="460" guiY="20" id="MAP_WRITER0" type="MAP_WRITER">
<attr name="mapping"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<clover:collection clover:name="OutputData" xmlns:clover="http://www.cloveretl.com/ns/xmlmapping">
  <item clover:inPort="0">
    <KSE_x005f_x005fAssembly_x005f_x005fc>$0.KSE__Assembly__c</KSE_x005f_x005fAssembly_x005f_x005fc>
    <KSE_x005f_x005fECO_x005f_x005fc>$0.KSE__ECO__c</KSE_x005f_x005fECO_x005f_x005fc>
    <KSE_x005f_x005fDateECO_x005f_x005fc>$0.KSE__DateECO__c</KSE_x005f_x005fDateECO_x005f_x005fc>
    <KSE_x005f_x005fNotes_x005f_x005fc>$0.KSE__Notes__c</KSE_x005f_x005fNotes_x005f_x005fc>
  </item>
</clover:collection>]]></attr>
<attr name="_data_format"><![CDATA[MAP]]></attr>
</Node>
<Node enabled="enabled" guiHeight="0" guiName="InputData_to_OutputData" guiWidth="0" guiX="240" guiY="20" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
$out.0.__id=$in.0.__id;
		return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge debugMode="true" fromNode="BEAN_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="e2c42167-5cec-41fb-a4bd-2334892483cd" outPort="Port 0 (out)" toNode="REFORMAT0:0"/>
<Edge debugMode="true" fromNode="REFORMAT0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="dbb87d33-fe37-4cd8-b652-dc9e5a91235e" outPort="Port 0 (out)" toNode="MAP_WRITER0:0"/>
</Phase>
</Graph>
